FROM golang:1.24-alpine AS builder

# Установка необходимых зависимостей
RUN apk add --no-cache git gcc musl-dev

# Создаем рабочую директорию для проекта
WORKDIR /app

# Копируем файлы go.mod и go.sum
COPY go.mod go.sum* ./

# Скачиваем зависимости
RUN go mod download

# Копируем исходный код
COPY . .

# Собираем приложение
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/main.go

# Используем минимальный образ для запуска
FROM alpine:latest

# Устанавливаем необходимые пакеты
RUN apk --no-cache add ca-certificates tzdata wget

# Создаем непривилегированного пользователя
RUN adduser -D -g '' appuser

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем собранное приложение из предыдущего этапа
COPY --from=builder /app/main .
COPY --from=builder /app/config ./config

# Создаем директорию для логов с правильными разрешениями
RUN mkdir -p /app/logs && chown -R appuser:appuser /app/logs

# Переключаемся на непривилегированного пользователя
USER appuser

# Настраиваем переменные окружения для Kafka
ENV KAFKA_BROKERS=kafka:9092
ENV KAFKA_TOPIC=user-events
ENV KAFKA_GROUP_ID=user-service-group
ENV APP_PORT=8080
ENV APP_ENV=development
ENV LOG_LEVEL=info

# Открываем порт для HTTP-сервера
EXPOSE 8080

# Настраиваем точку входа для контейнера
ENTRYPOINT ["/app/main"]